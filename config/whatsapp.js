const axios = require("axios");

const PHONE_NUMBER_ID = process.env.PHONE_NUMBER_ID;
const WHATSAPP_TOKEN = process.env.WHATSAPP_TOKEN;

async function sendMessage(data) {
  const url = `https://graph.facebook.com/v17.0/${PHONE_NUMBER_ID}/messages`;
  try {
    const res = await axios.post(url, data, {
      headers: {
        Authorization: `Bearer ${WHATSAPP_TOKEN}`,
        "Content-Type": "application/json",
      },
    });
    console.log("тЬЕ Message sent successfully!");
    return res.data;
  } catch (error) {
    console.error("тЭМ Error sending message:", JSON.stringify(error.response?.data, null, 2));
    throw error;
  }
}

async function sendText(to, text) {
  const data = {
    messaging_product: "whatsapp",
    to,
    type: "text",
    text: { body: text },
  };
  await sendMessage(data);
}

async function sendPaginatedText(to, title, menuId, allRows, menuIndex = 0) {
  const chunkSize = 9;
  const chunks = [];
  for (let i = 0; i < allRows.length; i += chunkSize) chunks.push(allRows.slice(i, i + chunkSize));
  const menuRows = chunks[menuIndex] ? [...chunks[menuIndex]] : [];

  if (menuIndex < chunks.length - 1) {
    menuRows.push({ id: `NEXT_MENU_${menuIndex + 1}`, title: "тЮбя╕П роЕроЯрпБродрпНродродрпБ", description: "роЕроЯрпБродрпНрод роорпЖройрпБро╡рпИрокрпН рокро╛ро░рпНроХрпНроХ" });
  }
  if (menuIndex > 0) {
    menuRows.push({ id: `BACK_TO_MAIN`, title: "тмЕя╕П рокро┐ройрпН роЪрпЖро▓рпНро▓", description: "роорпБроирпНродрпИроп роорпЖройрпБро╡ро┐ро▒рпНроХрпБ родро┐ро░рпБроорпНрок" });
  }

  const data = {
    messaging_product: "whatsapp",
    to,
    type: "interactive",
    interactive: {
      type: "list",
      header: { type: "text", text: title },
      body: { text: "родро┐ро░рпБроХрпНроХрпЛропро┐ро▓рпН родрпКроЯро░рпНрокро╛рой родроХро╡ро▓рпНроХро│рпИ роЕро▒ро┐роп роХрпАро┤рпЗ роЙро│рпНро│ро╡ро▒рпНро▒ро┐ро▓рпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпНЁЯСЗ" },
      action: { button: "ЁЯФ╜ роорпЖройрпБро╡рпИроХрпН роХро╛рог", sections: [{ title: "ЁЯУЬ ро╡ро┐ро░рпБрокрпНрокроЩрпНроХро│рпН", rows: menuRows }] },
    },
  };

  try {
    await sendMessage(data);
  } catch (error) {
    console.log("тЪая╕П List not supported тАФ fallback text sent.");
    let menuText = `ЁЯЫХ ${title}\n\n`;
    menuRows.forEach((r, i) => { menuText += `${i + 1}. ${r.title}\n`; });
    menuText += `\nЁЯСЙ роОрогрпН роЕро▓рпНро▓родрпБ рокрпЖропро░рпИ родроЯрпНроЯроЪрпНроЪрпБ роЪрпЖропрпНропро╡рпБроорпН.`;
    await sendText(to, menuText);
  }
}

async function sendTextWithBackButton(to, text) {
  const data = {
    messaging_product: "whatsapp",
    to,
    type: "interactive",
    interactive: { type: "button", body: { text }, action: { buttons: [{ type: "reply", reply: { id: "BACK_TO_MAIN", title: "ЁЯФЩ рокро┐ройрпН роЪрпЖро▓рпНро▓" } }] } },
  };
  try { await sendMessage(data); } 
  catch (error) { console.log("тЪая╕П Button not supported тАФ fallback text sent."); await sendText(to, `${text}\n\n(роорпБродройрпНроорпИ роорпЖройрпБро╡ро┐ро▒рпНроХрпБ родро┐ро░рпБроорпНрок 'hi' роОройродрпН родроЯрпНроЯроЪрпНроЪрпБ роЪрпЖропрпНропро╡рпБроорпН)`); }
}

module.exports = { sendText, sendPaginatedText, sendTextWithBackButton,  sendMessage,   };
