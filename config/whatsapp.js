// config/whatsapp.js
const axios = require('axios');

const PHONE_NUMBER_ID = process.env.PHONE_NUMBER_ID;
const WHATSAPP_TOKEN = process.env.WHATSAPP_TOKEN;

// Send message via WhatsApp Cloud API
async function sendMessage(data) {
  const url = `https://graph.facebook.com/v15.0/${PHONE_NUMBER_ID}/messages`;
  try {
    const res = await axios.post(url, data, {
      headers: {
        Authorization: `Bearer ${WHATSAPP_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    console.log("тЬЕ Message sent:", res.data);
    return res.data;
  } catch (err) {
    console.error("тЭМ Error sending message:", err.response?.data || err.message);
  }
}

// Regular text message
async function sendText(to, text) {
  return sendMessage({
    messaging_product: 'whatsapp',
    to,
    type: 'text',
    text: { body: text }
  });
}

// Send menu as WhatsApp list
async function sendMenuList(to) {
  return sendMessage({
    messaging_product: 'whatsapp',
    recipient_type: "individual",
    to,
    type: 'interactive',
    interactive: {
      type: 'list',
      body: {
        text: 'ЁЯМ╕ ро╡роЯрокро┤роиро┐ роХрпЛропро┐ро▓рпН родроЩрпНроХро│рпИ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН.\nродрпЗро░рпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН ЁЯСЗ'
      },
      footer: {
        text: 'ро╡ро┐ро░рпБрокрпНрокродрпНродрпИродрпН родрпЗро░рпНро╡рпБ роЪрпЖропрпНропрпБроЩрпНроХро│рпН.'
      },
      action: {
        button: 'ЁЯУЬ роорпЖройрпБ родро┐ро▒роХрпНроХ',
        sections: [
          {
            title: 'роХрпЛро╡ро┐ро▓рпН родроХро╡ро▓рпНроХро│рпН',
            rows: [
              {
                id: 'TALAVARALAR',
                title: '1я╕ПтГг родро▓ро╡ро░ро▓ро╛ро▒рпБ',
                description: 'ро╡роЯрокро┤роиро┐ роХрпЛропро┐ро▓ро┐ройрпН ро╡ро░ро▓ро╛ро▒рпБ'
              },
              {
                id: 'POOJA',
                title: '2я╕ПтГг рокрпВроЬрпИ ро╡ро┐рокро░роорпН',
                description: 'рокрпВроЬрпИ роирпЗро░роЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН ро╡ро┐ро╡ро░роЩрпНроХро│рпН'
              },
              {
                id: 'KATTANAM',
                title: '3я╕ПтГг роХроЯрпНроЯрог родро░ро┐роЪройроорпН',
                description: 'роЕрокро┐ро╖рпЗроХроорпН рооро▒рпНро▒рпБроорпН родро┐ро░рпБроХрпНроХро▓рпНропро╛рогроорпН роХроЯрпНроЯрогроорпН'
              },
              {
                id: 'MARRIAGE',
                title: '4я╕ПтГг родро┐ро░рпБроорогроорпН рокро▒рпНро▒ро┐роп ро╡ро┐ро╡ро░роЩрпНроХро│рпН',
                description: 'родро┐ро░рпБроорог ро╡ро┐ро╡ро░роЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН роЪро╛ройрпНро▒ро┐родро┤рпНроХро│рпН'
              }
            ]
          }
        ]
      }
    }
  });
}

// Long message (split into chunks)
async function sendPaginatedText(to, text) {
  const chunkSize = 3000; // safe limit
  const chunks = [];

  for (let i = 0; i < text.length; i += chunkSize) {
    chunks.push(text.slice(i, i + chunkSize));
  }

  for (const chunk of chunks) {
    await sendText(to, chunk);
  }
}

module.exports = { sendText, sendMenuList, sendPaginatedText };
